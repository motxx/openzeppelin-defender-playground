/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DemoERC20, DemoERC20Interface } from "../DemoERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MinimalForwarder",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000dfd38038062000dfd8339810160408190526200003491620001bc565b8060405180604001604052806009815260200168044656d6f45524332360bc1b8152506040518060400160405280600481526020016344656d6f60e01b815250816003908162000085919062000292565b50600462000094828262000292565b5050506001600160a01b0316608052620000c87392053da0aca47bfbcfeda5b8e5ce7487061b37066402540be400620000cf565b5062000386565b6001600160a01b0382166200012a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200013e91906200035e565b90915550506001600160a01b038216600090815260208190526040812080548392906200016d9084906200035e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b600060208284031215620001cf57600080fd5b81516001600160a01b0381168114620001e757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200021957607f821691505b6020821081036200023a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b757600081815260208120601f850160051c81016020861015620002695750805b601f850160051c820191505b818110156200028a5782815560010162000275565b505050505050565b81516001600160401b03811115620002ae57620002ae620001ee565b620002c681620002bf845462000204565b8462000240565b602080601f831160018114620002fe5760008415620002e55750858301515b600019600386901b1c1916600185901b1785556200028a565b600085815260208120601f198616915b828110156200032f578886015182559484019460019091019084016200030e565b50858210156200034e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200038057634e487b7160e01b600052601160045260246000fd5b92915050565b608051610a54620003a960003960008181610171015261085e0152610a546000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063572b6c0511610081578063a457c2d71161005b578063a457c2d7146101d2578063a9059cbb146101e5578063dd62ed3e146101f857600080fd5b8063572b6c051461016157806370a08231146101a157806395d89b41146101ca57600080fd5b806323b872dd116100b257806323b872dd1461012c578063313ce5671461013f578063395093511461014e57600080fd5b806306fdde03146100d9578063095ea7b3146100f757806318160ddd1461011a575b600080fd5b6100e1610231565b6040516100ee919061089e565b60405180910390f35b61010a610105366004610908565b6102c3565b60405190151581526020016100ee565b6002545b6040519081526020016100ee565b61010a61013a366004610932565b6102e7565b604051601281526020016100ee565b61010a61015c366004610908565b610315565b61010a61016f36600461096e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b61011e6101af36600461096e565b6001600160a01b031660009081526020819052604090205490565b6100e1610367565b61010a6101e0366004610908565b610376565b61010a6101f3366004610908565b610432565b61011e610206366004610990565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b606060038054610240906109c3565b80601f016020809104026020016040519081016040528092919081815260200182805461026c906109c3565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b6000806102ce61044a565b90506102db818585610459565b60019150505b92915050565b6000806102f261044a565b90506102ff8582856105b1565b61030a858585610643565b506001949350505050565b60008061032061044a565b90506102db81858561035885896001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61036291906109fd565b610459565b606060048054610240906109c3565b60008061038161044a565b6001600160a01b03818116600090815260016020908152604080832093891683529290522054909150838110156104255760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61030a8286868403610459565b60008061043d61044a565b90506102db818585610643565b600061045461085a565b905090565b6001600160a01b0383166104d45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161041c565b6001600160a01b0382166105505760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161041c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461063d57818110156106305760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161041c565b61063d8484848403610459565b50505050565b6001600160a01b0383166106bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161041c565b6001600160a01b03821661073b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161041c565b6001600160a01b038316600090815260208190526040902054818110156107ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161041c565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108019084906109fd565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084d91815260200190565b60405180910390a361063d565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610899575060131936013560601c90565b503390565b600060208083528351808285015260005b818110156108cb578581018301518582016040015282016108af565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461090357600080fd5b919050565b6000806040838503121561091b57600080fd5b610924836108ec565b946020939093013593505050565b60008060006060848603121561094757600080fd5b610950846108ec565b925061095e602085016108ec565b9150604084013590509250925092565b60006020828403121561098057600080fd5b610989826108ec565b9392505050565b600080604083850312156109a357600080fd5b6109ac836108ec565b91506109ba602084016108ec565b90509250929050565b600181811c908216806109d757607f821691505b6020821081036109f757634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e157634e487b7160e01b600052601160045260246000fdfea264697066735822122043185710a011d18f7ae78d3c5fb149e50b857a9524755c0e99e318fd843fee7764736f6c63430008110033";

type DemoERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoERC20__factory extends ContractFactory {
  constructor(...args: DemoERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    forwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DemoERC20> {
    return super.deploy(forwarder, overrides || {}) as Promise<DemoERC20>;
  }
  override getDeployTransaction(
    forwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(forwarder, overrides || {});
  }
  override attach(address: string): DemoERC20 {
    return super.attach(address) as DemoERC20;
  }
  override connect(signer: Signer): DemoERC20__factory {
    return super.connect(signer) as DemoERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoERC20Interface {
    return new utils.Interface(_abi) as DemoERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemoERC20 {
    return new Contract(address, _abi, signerOrProvider) as DemoERC20;
  }
}
